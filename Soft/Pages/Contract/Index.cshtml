@page
<<<<<<< HEAD
@using Core.Extensions
=======
@inject SignInManager<ApplicationUser> signInManager

>>>>>>> DifferentViewsForRoles
@model PageModels.ContractModel

@{
    Layout = "_Index";
}
@if (signInManager.IsSignedIn(User) && User.IsInRole("tere"))
{

<<<<<<< HEAD
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.items[0].personName)</th>
            <th>@Html.DisplayNameFor(model => model.items[0].occupationName)</th>
            <th>@Html.DisplayNameFor(model => model.items[0].departmentName)</th>
            <th>@Html.TableSortHeader(x => x.item.validFrom, Model)</th>
            <th>@Html.TableSortHeader(x => x.item.validTo, Model)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.items)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.personName)</td>
            <td>@Html.DisplayFor(modelItem => item.occupationName)</td>
            <td>@Html.DisplayFor(modelItem => item.departmentName)</td>
            <td>@Html.RowData(x => item.validFrom)</td>
            <td>@Html.RowData(x => item.validTo)</td>
            <td>@Html.RowButtons(Model.PageUrl, $"{item.id}")</td>
</tr>
    }
    </tbody>

</table>
=======
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.item.personId)</th>
                <th>@Html.DisplayNameFor(model => model.item.occupationId)</th>
                <th>@Html.DisplayNameFor(model => model.item.departmentId)</th>
                <th>@Html.DisplayNameFor(model => model.item.validFrom)</th>
                <th>@Html.DisplayNameFor(model => model.item.validTo)</th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.items)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.personName)</td>
                    <td>@Html.DisplayFor(modelItem => item.occupationName)</td>
                    <td>@Html.DisplayFor(modelItem => item.departmentName)</td>
                    <td>@Html.DisplayFor(modelItem => item.validFrom)</td>
                    <td>@Html.DisplayFor(modelItem => item.validTo)</td>
                    <td>
                        <a asp-page="./Edit" asp-route-handler="Edit" asp-route-id="@item.id">Edit</a> |
                        <a asp-page="./Details" asp-route-handler="Details" asp-route-id="@item.id">Details</a> |
                        <a asp-page="./Delete" asp-route-handler="Delete" asp-route-id="@item.id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <li>Pane ennast põlema</li>
}
>>>>>>> DifferentViewsForRoles
